[{"/home/akhilkala/Desktop/Web/theropy/client/src/index.tsx":"1","/home/akhilkala/Desktop/Web/theropy/client/src/App.tsx":"2","/home/akhilkala/Desktop/Web/theropy/client/src/context/AuthContext.tsx":"3","/home/akhilkala/Desktop/Web/theropy/client/src/components/ErrorBoundary.tsx":"4","/home/akhilkala/Desktop/Web/theropy/client/src/utils/requests.ts":"5","/home/akhilkala/Desktop/Web/theropy/client/src/components/PrivateRoute.tsx":"6","/home/akhilkala/Desktop/Web/theropy/client/src/components/Animation.tsx":"7","/home/akhilkala/Desktop/Web/theropy/client/src/pages/Admin.tsx":"8","/home/akhilkala/Desktop/Web/theropy/client/src/pages/NotFound.tsx":"9","/home/akhilkala/Desktop/Web/theropy/client/src/pages/Teacher.tsx":"10","/home/akhilkala/Desktop/Web/theropy/client/src/pages/User.tsx":"11","/home/akhilkala/Desktop/Web/theropy/client/src/utils/utilities.ts":"12","/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useFetch.ts":"13","/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useInputState.ts":"14","/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useConfirm.ts":"15","/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useDocumentTitle.ts":"16","/home/akhilkala/Desktop/Web/theropy/client/src/pages/Landing.tsx":"17","/home/akhilkala/Desktop/Web/theropy/client/src/components/Input.tsx":"18","/home/akhilkala/Desktop/Web/theropy/client/src/components/Confirm.tsx":"19","/home/akhilkala/Desktop/Web/theropy/client/src/components/Feedback.tsx":"20","/home/akhilkala/Desktop/Web/theropy/client/src/components/Login.tsx":"21"},{"size":731,"mtime":1632260516420,"results":"22","hashOfConfig":"23"},{"size":971,"mtime":1632697946320,"results":"24","hashOfConfig":"23"},{"size":1734,"mtime":1632531593679,"results":"25","hashOfConfig":"23"},{"size":622,"mtime":1632069675324,"results":"26","hashOfConfig":"23"},{"size":1599,"mtime":1632876516490,"results":"27","hashOfConfig":"23"},{"size":1000,"mtime":1632526992762,"results":"28","hashOfConfig":"23"},{"size":1387,"mtime":1633077434990,"results":"29","hashOfConfig":"23"},{"size":14959,"mtime":1635329016611,"results":"30","hashOfConfig":"23"},{"size":426,"mtime":1631975588682,"results":"31","hashOfConfig":"23"},{"size":9362,"mtime":1634826438101,"results":"32","hashOfConfig":"23"},{"size":6312,"mtime":1635329653303,"results":"33","hashOfConfig":"23"},{"size":350,"mtime":1633078056950,"results":"34","hashOfConfig":"23"},{"size":689,"mtime":1631992039571,"results":"35","hashOfConfig":"23"},{"size":574,"mtime":1633163303666,"results":"36","hashOfConfig":"23"},{"size":612,"mtime":1631967058105,"results":"37","hashOfConfig":"23"},{"size":366,"mtime":1631966882082,"results":"38","hashOfConfig":"23"},{"size":15205,"mtime":1635329319362,"results":"39","hashOfConfig":"23"},{"size":1442,"mtime":1633163591828,"results":"40","hashOfConfig":"23"},{"size":696,"mtime":1632090876110,"results":"41","hashOfConfig":"23"},{"size":1755,"mtime":1634826438097,"results":"42","hashOfConfig":"23"},{"size":1921,"mtime":1632873588217,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"14b8l5p",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/home/akhilkala/Desktop/Web/theropy/client/src/index.tsx",[],["89","90"],"/home/akhilkala/Desktop/Web/theropy/client/src/App.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/context/AuthContext.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/components/ErrorBoundary.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/utils/requests.ts",[],"/home/akhilkala/Desktop/Web/theropy/client/src/components/PrivateRoute.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/components/Animation.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/pages/Admin.tsx",["91"],"/home/akhilkala/Desktop/Web/theropy/client/src/pages/NotFound.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/pages/Teacher.tsx",["92"],"import React, { ReactElement } from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport uploadImg from '../assets/upload.png';\nimport Input from '../components/Input';\nimport useInputState from '../hooks/useInputState';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport { useToasts } from 'react-toast-notifications';\nimport { get, post } from '../utils/requests';\nimport Animation from '../components/Animation';\nimport useDocumentTitle from '../hooks/useDocumentTitle';\nimport { getTherapy } from '../utils/utilities';\n\nconst options = [\n  { value: '0', label: 'Vision Therapy' },\n  { value: '1', label: 'Speech Therapy' },\n  { value: '2', label: 'Occupational Therapy' },\n  { value: '3', label: 'Play & Art Therapy' },\n  { value: '4', label: 'Counselling' },\n  { value: '5', label: 'Clinical Psycology' },\n  { value: '6', label: 'Special Education' },\n  { value: '7', label: 'Vocational Training' },\n];\n\nexport default function Teacher(): ReactElement {\n  useDocumentTitle('Manonaya | Therapist Panel');\n  const auth = useAuth();\n  return (\n    <div className=\"teacher\">\n      <div className=\"top\">\n        <h1>Greetings, {auth?.user?.username}</h1>\n        <button onClick={auth?.logout} className=\"btn\">\n          Logout <i className=\"fas fa-sign-in-alt\"></i>\n        </button>\n      </div>\n      <nav>\n        <NavLink exact to=\"/\" activeClassName=\"active-link\">\n          Patient Data\n        </NavLink>\n        <NavLink to=\"/upload-report\" activeClassName=\"active-link\">\n          Upload Report\n        </NavLink>\n      </nav>\n      <main>\n        <Switch>\n          <Route exact path=\"/\" component={PatientData} />\n          <Route path=\"/upload-report\" component={UploadReport} />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nconst DEFAULT_OPTION = {\n  value: '0',\n  label: 'Vision Therapy',\n};\n\nconst DEFAULT_PLACEHOLDER = 'No Report Chosen';\n\nfunction UploadReport(): ReactElement {\n  const username = useInputState();\n  const fileRef = React.useRef<HTMLInputElement>(null);\n  const [placeholder, setPlaceholder] = React.useState(DEFAULT_PLACEHOLDER);\n  const [option, setOption] = React.useState(DEFAULT_OPTION);\n  const [loading, setLoading] = React.useState(false);\n  const { addToast } = useToasts();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    //@ts-ignore\n    const file = fileRef.current.files[0];\n\n    if (!username.value || !file)\n      return addToast('All fields are required', { appearance: 'error' });\n    if (file.type !== 'application/pdf')\n      return addToast('File type not supported', { appearance: 'error' });\n\n    setLoading(true);\n    const data = new FormData();\n    data.append('file', file);\n    data.append('username', username.value);\n    data.append('therapy', option.value);\n\n    try {\n      await post('/upload-report', data, {}, true);\n      username.handleReset();\n      return addToast('File uploaded successfully', { appearance: 'success' });\n    } catch (err: any) {\n      return addToast(err.response.data.message, { appearance: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const setFileName = (e: any) => {\n    setPlaceholder(e.target.files[0].name);\n  };\n\n  const handleSelect = (option: any) => {\n    setOption(option);\n  };\n\n  return (\n    <div className=\"upload-report\">\n      <form onSubmit={handleSubmit} className=\"left\">\n        <h1>Upload a Patient Report</h1>\n        <Input state={username} placeholder=\"Patient Username\" />\n        <Dropdown\n          options={options}\n          value={option}\n          placeholder=\"Select an option\"\n          className=\"dropdown\"\n          onChange={handleSelect}\n        />\n        <div className=\"file\">\n          <input\n            style={{ display: 'none' }}\n            type=\"file\"\n            name=\"report\"\n            id=\"report\"\n            ref={fileRef}\n            onChange={setFileName}\n          />\n          <div className=\"name\">{placeholder}</div>\n          <label htmlFor=\"report\" className=\"btn\">\n            Upload\n          </label>\n        </div>\n        <button disabled={loading} className=\"btn\">\n          Submit\n        </button>\n      </form>\n      <div className=\"right\">\n        <img src={uploadImg} alt=\"Upload\" />\n      </div>\n    </div>\n  );\n}\n\nfunction PatientData(): ReactElement {\n  const username = useInputState();\n  const [loading, setLoading] = React.useState(false);\n  const { addToast } = useToasts();\n  const [data, setData] = React.useState<any>(null);\n  const [therapists, setTherapists] = React.useState<any>([]);\n\n  const [history, setHistory] = React.useState<any>(null);\n\n  React.useEffect(() => {\n    if (!data) return;\n    setHistory(getFormattedUserHistory()[0]);\n  }, [data]);\n\n  const handleSearch = async () => {\n    try {\n      setLoading(true);\n      if (!username.value) return addToast('Username is required', { appearance: 'error' });\n\n      const res = await get(`/user-data/${username.value}`);\n\n      res.therapies.forEach(async (item: any) => {\n        const therapies = await get(`/therapist-data/${item.therapist}`);\n        therapies.option = options[item.therapy].label;\n        setTherapists((prev: any) => [...prev, therapies]);\n      });\n\n      setData(res);\n    } catch (err: any) {\n      addToast(err.response.data.message, { appearance: 'error' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getFormattedUserHistory = () => {\n    if (!data) return [];\n    return data?.history.map((history: any) => ({\n      label: history.date.split('T')[0],\n      value: history.fileUrl,\n    }));\n  };\n\n  const handleHistoryChange = (option: any) => setHistory(option);\n\n  return (\n    <div className=\"patinet-data\">\n      <div className=\"top\">\n        <Input\n          state={username}\n          placeholder=\"Search for username\"\n          icon={<i style={{ cursor: 'default' }} className=\"fas fa-search\"></i>}\n        />\n        <button disabled={loading} onClick={handleSearch} className=\"btn\">\n          Search\n        </button>\n      </div>\n      {loading && <Animation animation=\"loading2\" />}\n      {!!data ? (\n        <main className=\"main\">\n          <aside className=\"left\">\n            <Animation width={100} height={100} animation=\"user\" loop={false} />{' '}\n            <div className=\"item-container\">\n              <div className=\"item container-item\">\n                <h4>Full Name:</h4>\n                {data?.user?.fullName}\n              </div>\n              <div className=\"item container-item\">\n                <h4>Username:</h4>\n                {data?.user?.username}\n              </div>\n              <div className=\"item container-item\">\n                <h4>Age:</h4>\n                {data?.age}\n              </div>\n              <div className=\"item container-item\">\n                <h4>Gender:</h4>\n                {data?.gender}\n              </div>\n            </div>\n            <div className=\"item item--alt\">\n              <h4>Therapies needed:</h4>\n              <br />\n              <div className=\"sub-items\">\n                {therapists?.map((therapy: any) => (\n                  <div className=\"sub-item\">\n                    <span>{therapy.option}</span>\n                    <br /> <h5>Faculty:</h5> {therapy.fullName}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"history\">\n              <h4>User History</h4>\n              <div className=\"flex\">\n                <Dropdown\n                  options={getFormattedUserHistory()}\n                  value={getFormattedUserHistory()[0]}\n                  placeholder=\"Select an option\"\n                  className=\"dropdown\"\n                  onChange={handleHistoryChange}\n                />\n                <a target=\"_blank\" rel=\"noreferrer noopener\" href={history?.value} className=\"btn\">\n                  View\n                </a>\n              </div>\n            </div>\n          </aside>\n          <aside>\n            <section>\n              <h4>User Reports</h4>\n              <Dropdown\n                options={[...options, { value: '8', label: 'No Filter' }]}\n                value={{ value: '8', label: 'No Filter' }}\n                placeholder=\"Select an option\"\n                className=\"dropdown\"\n              />\n              <div className=\"cards\">\n                {data?.report\n                  .filter((report: any) => {\n                    return true;\n                  })\n                  .map((report: any) => (\n                    <div className=\"report-card\">\n                      <div className=\"left\">\n                        <h4>\n                          <span>{getTherapy(report.therapy)}</span> - {report.therapist.fullName}\n                        </h4>\n                        <span>{`(${report.date.split('T')[0]})`}</span>\n                      </div>\n                      <a href={report.fileUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n                        <i className=\"fa fa-eye\"></i>\n                      </a>\n                    </div>\n                  ))}\n              </div>\n            </section>\n          </aside>\n        </main>\n      ) : (\n        <div className=\"no-data\">\n          <h3>Search for a user</h3>\n          <div className=\"no-data-img\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/akhilkala/Desktop/Web/theropy/client/src/pages/User.tsx",["93"],"/home/akhilkala/Desktop/Web/theropy/client/src/utils/utilities.ts",[],"/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useFetch.ts",["94"],"import { useEffect, useState } from \"react\";\nimport { get } from \"../utils/requests\";\n\nconst useFetch = (url: string, lazy = false) => {\n  const [isLoading, setIsLoading] = useState(!lazy);\n  const [error, setError] = useState<any>(null);\n  const [data, setData] = useState<any>(null);\n\n  const fetch = (loading = true) => {\n    setIsLoading(loading);\n    get(url)\n      .then((data: any) => {\n        setData(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n        setIsLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    if (!lazy) {\n      fetch();\n    }\n  }, []);\n\n  return { isLoading, error, data, fetch };\n};\n\nexport default useFetch;\n","/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useInputState.ts",[],"/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useConfirm.ts",[],"/home/akhilkala/Desktop/Web/theropy/client/src/hooks/useDocumentTitle.ts",[],"/home/akhilkala/Desktop/Web/theropy/client/src/pages/Landing.tsx",["95"],"/home/akhilkala/Desktop/Web/theropy/client/src/components/Input.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/components/Confirm.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/components/Feedback.tsx",[],"/home/akhilkala/Desktop/Web/theropy/client/src/components/Login.tsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":155,"column":6,"nodeType":"106","endLine":155,"endColumn":12,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":81,"column":6,"nodeType":"106","endLine":81,"endColumn":8,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":26,"column":6,"nodeType":"106","endLine":26,"endColumn":8,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":17,"column":33,"nodeType":"114","messageId":"115","endLine":17,"endColumn":42},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getFormattedUserHistory'. Either include it or remove the dependency array.","ArrayExpression",["118"],"React Hook React.useEffect has missing dependencies: 'auth?.user?.patient?.therapies' and 'getFormattedUserHistory'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'fetch' and 'lazy'. Either include them or remove the dependency array.",["120"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [data, getFormattedUserHistory]",{"range":"127","text":"128"},"Update the dependencies array to be: [auth?.user?.patient?.therapies, getFormattedUserHistory]",{"range":"129","text":"130"},"Update the dependencies array to be: [fetch, lazy]",{"range":"131","text":"132"},[4790,4796],"[data, getFormattedUserHistory]",[2821,2823],"[auth?.user?.patient?.therapies, getFormattedUserHistory]",[610,612],"[fetch, lazy]"]